plugins {
    id "java"
    id "eclipse"
    id "idea"
    id "jaci.openrio.gradle.GradleRIO" version "2018.01.22"
}

if (!project.hasProperty("className"))
  throw new InvalidUserDataException("Please specify a class name to build -PclassName.");
if (!project.hasProperty("targetAddress"))
  throw new InvalidUserDataException("Please specify a deploy target with -PtargetAddress.");

def TEAM = 4915
def ROBOT_CLASS = "com.spartronics4915.learnyouarobot."
ROBOT_CLASS += project.className // Defined via -PclassName

deploy {
    targets {
        target("roborio", jaci.openrio.gradle.frc.RoboRIO) {
            team = TEAM
            addresses = [ project.targetAddress ] // Defined via -PtargetAddress
        }
    }
    artifacts {
        artifact('frcJava', jaci.openrio.gradle.frc.FRCJavaArtifact) {
            targets << "roborio"
        }
    }
}

// We add all reasonable deps because someone might want them in a lesson.
dependencies {
    compile wpilib()
    compile ctre()
    compile navx()
    compile openrio.powerup.matchData()
}

// Setting up my Jar File. In this case, adding all libraries into the main jar ('fat jar')
// in order to make them all available at runtime. Also adding the manifest so WPILib
// knows where to look for our Robot Class.
jar {
    from configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    manifest jaci.openrio.gradle.GradleRIOPlugin.javaManifest(ROBOT_CLASS)
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.4'
}
